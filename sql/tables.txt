CREATE TABLE customers (
    cID                 INT NOT NULL,
    firstName           VARCHAR(20) NOT NULL, 
    lastName            VARCHAR(20) NOT NULL, 
    phoneNumber         VARCHAR(20), 
    mailAddress         VARCHAR(50), 
    deliveryAddress     VARCHAR(50), 
    CONSTRAINT customers_pk PRIMARY KEY (firstName, lastName) 
);

CREATE TABLE employees (
    eID                 INT NOT NULL,
    firstName           VARCHAR(20) NOT NULL, 
    lastName            VARCHAR(20) NOT NULL, 
    phoneNumber         VARCHAR(20) NOT NULL, 
    address             VARCHAR(50) NOT NULL, 
    salary              INT NOT NULL, 
    commissionRate      INT NOT NULL, 
    totalCommission     INT NOT NULL, 
    CONSTRAINT employees_pk PRIMARY KEY (eID)
);


CREATE TABLE orders (
    orderNumber     INT NOT NULL,
    firstName       VARCHAR(20) NOT NULL, 
    lastName        VARCHAR(20) NOT NULL, 
    delivery        VARCHAR(1) NOT NULL, 
    orderDate       DATE NOT NULL,
    orderTime       TIME NOT NULL,
    salesRepID      INT NOT NULL, 
    CONSTRAINT orders_pk PRIMARY KEY (orderNumber), 
    CONSTRAINT orders_fk1 FOREIGN KEY (firstName, lastName) REFERENCES customers (firstName, lastName), 
    CONSTRAINT orders_fk2 FOREIGN KEY (salesRepID) REFERENCES employees (eID)
);

CREATE TABLE payments (
    customerID          INT NOT NULL, 
    orderNumber         INT NOT NULL, 
    paymentDate         DATE NOT NULL, 
    amount              DECIMAL(10,2) NOT NULL,
    CONSTRAINT payments_pk PRIMARY KEY (customerID, orderNumber, paymentDate)
);

CREATE TABLE orderDetails (
    orderNumber     INTEGER NOT NULL, 
    productName     VARCHAR(20) NOT NULL, 
    quantity        INT NOT NULL, 
    priceEach       DECIMAL(10,2) NOT NULL, 
    CONSTRAINT orderDetails_pk PRIMARY KEY (orderNumber, productName), 
    CONSTRAINT orderDetails_fk FOREIGN KEY (orderNumber) REFERENCES orders (orderNumber)
);

CREATE TABLE products (
    productNumber       INT NOT NULL,
    productName         VARCHAR(20) NOT NULL, 
    MSRP                DECIMAL(10, 2) NOT NULL, 
    buyPrice            DECIMAL(10, 2) NOT NULL, 
    quantityInStock     INT NOT NULL, 
    profit              DECIMAL(10, 2) NOT NULL, 
    CONSTRAINT products_pk PRIMARY KEY (productNumber)
);


CREATE TABLE passwords (
    password    VARCHAR(20) NOT NULL,
    master      VARCHAR(1) NOT NULL, 
    CONSTRAINT password_pk PRIMARY KEY (password, master)
);

CREATE VIEW report AS
SELECT orderNumber, x.total total, COALESCE(y.payment, 0) pmtReceived, (x.total - COALESCE(y.payment, 0)) balance FROM (SELECT orderNumber, SUM(quantity * priceEach) total FROM orders 
INNER JOIN orderDetails using (orderNumber) group by orderNumber) x
LEFT OUTER JOIN 
(SELECT orderNumber, COALESCE(SUM(amount), 0) payment FROM payments WHERE customerID = 1 group by orderNumber) y
USING (orderNumber);